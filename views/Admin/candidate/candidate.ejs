<!DOCTYPE html>
<head>
	<title>Programming can be fun</title>
	<meta name = 'viewport' content = 'width=device-width'/>
</head>
<style>
:root{
	--color: #103;
	--direction: center;
	--distance: 15;
}
*{
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	list-style: none;
	text-decoration: none;
}
html{
	scroll-behavior: smooth;
}
body{
	display: flex;
	min-height: 100vh;
	justify-content: center;
	align-items: center;
	background: hsl(130,20%,10%);
	font-size: clamp(19px,1.7vw,22px);
	font-family: sans-serif;
	background: #eee;
	padding: 2rem;
	gap: 10px;
}
.box{
	padding: 30px 30px 50px;
	width: min(100%,600px);
	margin-top: 5em;
	box-shadow: 1px 1px 2px rgba(0,0,0,.1),
				-1px -1px 2px rgba(55,55,55,.3);	
	background: radial-gradient(#fffa, transparent 90%) top left / 200% 200%;
}
.box:focus-within h2{
	letter-spacing: .1em;
}
hr{
	border: 1px solid #fff;
}
legend{
	text-align: var(--direction);
	padding: 0 calc(1px * var(--distance));
	font-size: 1.5rem;
	letter-spacing: .04em;
	color: var(--color);
}
fieldset{
	border: none;
	border-top: 1px solid var(--color);
	padding: 10px 0;
}
hr{
	display: block;
	margin: 0 0 2rem;
	border-color: var(--color);
}
.box form div{
	margin: 0 0 2rem 0;
}
h2{
	color: var(--color);
	padding: 0 0 25px;
	text-align: center;
	text-decoration: underline;
	transition: all .1s;
}
.box form div label{
	display: block;
	padding: 0 0 8px;
	color: var(--color);
	letter-spacing: .04em;
}
.box form div input:not(.gender){
	width: 100%;
	padding: 15px;
	letter-spacing: .08em;
	color: #000;
	outline: none;
	border: none;
	background: none;
	font-size: 1rem;
	font-weight: bold;
	box-shadow: inset 1px 1px 2px rgba(0,0,0,.4),
				inset -1px -1px 2px rgba(55,55,55,.3);	
}
.box form div input::placeholder{
	color: var(--color);
	opacity: .6;
	letter-spacing: .04em;
}
button{
	outline: none;
	border: none;
	width: 100%;
	padding: 15px;
	font-size: 1.1rem;
	letter-spacing: .1em;
	margin-top: 3%;
	transition: all .1s;
	color: #fff;
	background: none;
	color: var(--color);
	box-shadow: 1px 1px 2px rgba(0,0,0,.6),
				-1px -1px 2px rgba(55,55,55,.7);	
	color: #fff;
	background: #101;
}
button:active{
	transform: scale(.9);
}
select{
	width: 100%;
	font-size: 1rem;
	font-weight: bold;
	box-shadow: inset 1px 1px 2px rgba(0,0,0,.4),
				inset -1px -1px 2px rgba(55,55,55,.3);	
	outline: none;
	border: none;
	background: none;
	padding: 15px;
}
nav{
	background: linear-gradient(90deg, #ffe9 20%, #fff 50%,#002 100%);
	position: fixed;
	top: 0;
	width: 100%;
	padding: 5px;
}
nav ul{
	display: flex;
}
nav ul li a{
	padding: 20px 0;
	display: block;
	color: #000;
	text-align: center;
}
nav ul li{
	/* background: orange; */
	flex: 0 0 calc(100% / 9);
	letter-spacing: .03em;
}
nav ul li a:hover{
	background: #002;
	color: #fff;
}
.wrapper{
	width: min(100%,1200px);
	margin: 0 auto;
}

</style>
<html>
<body>
	<%- include("../Partials/header.ejs"); -%>	
	<div class = 'box'>
		<form>
			<h2>Add Candidate</h2>
			<fieldset>
				<legend>Personal</legend>
			</fieldset>
			<div>
				<label>Election</label>
				<!-- <input type = 'text' name = 'election' placeholder = 'Enter email here' required = ''/> -->
				<select name = 'election'>
					<% election.forEach(election => { %>
						<option value = "<%=election.id%>"><%=election.title %>-<%=election.position %></option>
					<%}) %>
				</select>
			</div> 
			<div>
				<label>Party</label>
				<!-- <input type = 'text' name = 'election' placeholder = 'Enter email here' required = ''/> -->
				<select name = 'party'>
					<% parties.forEach(party => { %>
						<option value = "<%=party.id%>"><%=party.name %></option>
					<%}) %>
				</select>
			</div> 
			<div>
				<label>First Name</label>
				<input type = 'text' name = 'fname' placeholder = 'Enter first name here' required = ''/>
			</div> 
			<div>
				<label>Last Name</label>
				<input type = 'text' name = 'lname' placeholder = 'Enter last name here' required = ''/>
			</div> 
			<div>
				<label>Date of Birth</label>
				<input type = 'date' name = 'dob' placeholder = 'Enter DOB here' required = ''/>
			</div> 
			<div>
				<label>Male</label>
				<input class = 'gender' type = 'radio' name = 'gender' value = 'male' placeholder = 'Enter DOB here' required = ''/>
				<label>Female</label>
				<input class = 'gender' type = 'radio' name = 'gender' value = 'female' placeholder = 'Enter DOB here' required = ''/>
			</div> 
			<div>
				<label>State Of Origin</label>
				<select name = 'state'>
					<% states.forEach(state => { %>
						<option value = "<%=state.id%>"><%=state.name %></option>
					<%}) %>
				</select>
			</div> 
			<button>Add</button>
	</div>
</body>
<script defer = "">
	const form = document.forms[0];
	form.addEventListener('submit',async (e) => {
		e.preventDefault();
		try{
			const response = await fetch('/add_candidate',{
				method: "POST",
				body: JSON.stringify({
					election_id: form.election.value,				
					party_id: form.party.value,				
					state: form.state.value,
					fname: form.fname.value,
					lname: form.lname.value,
					gender: form.gender.value,
					dob: form.dob.value,				
				}),
				headers: {"Content-Type": "application/json"}
			})
			if(!response.ok){
				throw Error();
			}
			alert("Candidate Succesfully Added");
		}catch(err){
			alert("Error")
		}
		console.log(
			form.election.value,
			form.party.value,
			form.fname.value,
			form.lname.value,
			form.gender.value,
			form.state.value,
			form.dob.value
		)
	})
</script>
</html>